name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]

jobs:
  build-test:
    name: Build & Test (${{ matrix.os }} / ${{ matrix.build_type }} / psk=${{ matrix.psk }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        build_type: [ Debug, RelWithDebInfo ]
        psk: [ OFF, ON ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install OpenSSL (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential pkg-config libssl-dev

      - name: Install OpenSSL (macOS)
        if: runner.os == 'macOS'
        run: |
          brew list -1 --full-name
          brew update
          brew outdated
          echo "OPENSSL_ROOT_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$(brew --prefix openssl@3)/lib/pkgconfig" >> $GITHUB_ENV

      - name: Configure
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DBOX_USE_PSK=${{ matrix.psk }} \
            ${OPENSSL_ROOT_DIR:+-DOPENSSL_ROOT_DIR="$OPENSSL_ROOT_DIR"}

      - name: Build
        run: cmake --build build -- -j

      - name: Generate self-signed certs (Debug only)
        if: matrix.build_type == 'Debug'
        run: cmake --build build --target certs

      - name: Run tests (if any)
        run: |
          ctest --test-dir build --output-on-failure || true

  asan-ubsan:
    name: Linux Debug ASAN+UBSAN
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential pkg-config libssl-dev
      - name: Configure with sanitizers
        run: |
          export VERBOSE=1
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Debug \
            -DBOX_ENABLE_ASAN=ON \
            -DBOX_ENABLE_UBSAN=ON
      - name: Build
        run: cmake --build build -- -j
      - name: Tests (best-effort)
        run: ctest --test-dir build --output-on-failure || true

